### 防抖节流

* 防抖

触发高频事件后n秒内函数只会执行一次，如果n秒内高频事件再次被触发，则重新计算时间

```js
function debounce(fn, time) {
  let timer = null
  return function() {
    if(timer) {
      clearTimeout(timer)
    }
    timer = setTimeout(() => {
      fn.apply(this, arguments)
    }, time)
  }
}
```

* 节流

高频事件触发，但在n秒内只会执行一次，所以节流会稀释函数的执行频率

```js
function throttle(fn, time) {
  let canRun = true
  return function() {
    if(!canRun) return
    canRun = false
    setTimeout(() => {
      fn.apply(this, arguments)
      canRun = true
    }, time)
  }
```
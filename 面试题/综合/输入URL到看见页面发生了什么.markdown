### 输入URL到看见页面发生了什么

大概流程：
* 输入url地址
  * 首先浏览器会判断你输入的是一个合法的 URL 还是一个待搜索的关键词，如果含有特殊字符，浏览器会对其进行转义编码
  * 在发送请求之前，还要去检查强缓存，如果命中直接使用
  * serverWorker代理

* 向WEB服务器发送HTTP请求
  * 应用层进行DNS解析：浏览器缓存=》本地hosts文件=》本地DNS解析器缓存=》本地DNS服务器
  * 应用层生成HTTP请求报文
  * 传输层建立TCP连接
  * 网络层使用IP协议来选择路线
  * 数据链路层实现网络相邻节点间可靠的数据通信
  * 物理层传输数据

* 服务器返回一个 HTTP 响应

* 浏览器渲染
  * 主资源到达后，浏览器的Parser模块解析主资源的内容，生成派生资源对应的DOM结构，然后根据需求触发派生资源的加载流程。
    * parse HTML：解析 HTML 文本构建 DOM Tree
    * Recalc Styles：样式计算，计算出每个 DOM 节点的样式
    * Layout：计算可见元素几何信息 （位置、尺寸） 生成布局树（Layout Tree），也就是我们常说的重排 reflow
    * update layer tree：对节点进行分层，建立图层树（Layer Tree）
    * paint：为每个图层生成绘制列表，并提交到合成线程，合成线程将图层分图块，并栅格化将图块转换成位图
    * Composite Layers：在每个层上完成绘制过程之后，浏览器会将所有层按照合理的顺序合并成一个图层，然后显示在屏幕上

  * 至上而下渲染，并且外部链接的css和js会阻塞渲染进程

  * 以上步骤是一个渐进的过程，为了提高用户体验，渲染引擎试图尽可能快的把结果显示给最终用户。它不会等到所有HTML都被解析完才创建并布局渲染树。它会在从网络层获取文档内容的同时把已经接收到的局部内容先展示出来。

  * 回流(reflow)：当浏览器发现某个部分发生了点变化影响了布局，需要倒回去重新渲染。reflow 会从 这个 root frame 开始递归往下，依次计算所有的结点几何尺寸和位置。

  1、减少直接操作dom元素，改用className用于控制
  2、尽量减少table使用，table属性变化使用会直接导致布局重排或者重绘
  3、当dom元素position属性为fixed或者absolute, 可以通过css形变触发动画效果，此时是不会出发reflow的
  4、不要把 DOM 结点的属性值放在一个循环里当成循环里的变量
  5、如果需要创建多个DOM节点，可以使用DocumentFragment创建完后一次性的加入document



  * 重绘(repaint)：改变某个元素的背景色、文字颜色、边框颜色等等不影响它周围或内部布局的属性时，屏幕的一部分要重画，但是元素的几何尺寸没有变。



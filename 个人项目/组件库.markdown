### react组件库

* 从项目业务开发的复用组件中，抽离或修改出和业务无关的更通用组件，单独开辟文件夹放到一个组件库中，便于维护和管理。做多国家APP复用

* 采用同仓库代码管理各业务线，通过docz发布组件库文档

### 小程序组件库
  * 鉴于初始化新组件繁杂操作，新增命令行一键完成：拷贝组件基础模板，在demo页面生成对应目录和demo文件，生成文档基础模板。
  
* 直接采用官方内置weui框架源码二次开发
  * 提供组件demo演示页面
  * 提供了调试打包工具链：
    * 运行环境：构建src打包到dist，演示项目自动install，src文件监听刷新页面
  * 增强工具
    * 修改工具链，增加ts打包支持（调用webpack设置entry，output打包ts）
    * 监听demo文件变化，自动更新demo对应的wxml，wxss，json文件代码写入单独文件，提供给demo组件生成文档
    * 简化初始化新组件：增命令行一键完成：拷贝组件基础模板，在demo页面生成对应目录和demo文件，生成文档基础模板。

### 如何设计组件库

  * 合理的划分组件，组件的粒度足够细，边界足够清晰，这样才能最大程度地复用组件，尽量先做细粒度，再做粗粒度
    * 原子类
    * 组合类（按钮/按钮组；弹窗/弹窗带输入框，金额符号位置）

  * 规划全局配置
    * 皮肤：内置皮肤包变量集合，新增国家新增皮肤包
    * 全局配置：前缀，组件配置，特殊配置（金额符号位置，时间格式不同）

  * 基础约定
    * 目录规范，命名规范，class规范，属性规范，事件规范，插槽

### 如何快速上线马甲包：
  * 切换主题色调
  * 切换图片
  * 切换布局

==》抽离马甲APP独立的资源包统一管理，不能耦合在同一个文件，根据APP类型加载不同资源包

==》判断业务类型，import不同资源包（打包出不同js文件）
  资源包内容：CSS变量，图标库+图片，通过提高CSS权重重写特性布局的CSS代码（不用修改原来CSS），组件库皮肤包


### 设计模式

#### 创建型模式

* 工厂模式

* 单例模式
如果我们想始终得到的是同一个实例，那么这就是单例模式
我们需要每次return的是同一个对象。也就是说实际上在第一次实例的时候，需要把这个实例保存起来。再下一个实例的时候，直接return这个保存的实例。因此，这里需要用到闭包了。
比如浏览器中的window对象、登录浮窗等

#### 结构型模式

* 装饰器模式
装饰器模式：为对象添加新功能，不改变其原有的结构和功能。

* 代理模式
代理模式主要是为其他对象提供一种代理以控制对这个对象的访问，主要解决在直接访问对象时带来的问题

* 观察者模式
定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知和更新

* 策略模式
策略模式指的是定义一些列的算法，把他们一个个封装起来，目的就是将算法的使用与算法的实现分离开来，避免多重判断条件，更具有扩展性。
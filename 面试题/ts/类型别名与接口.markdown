### 类型别名与接口

#### 共同点

* 都是对类型进行别名的方式，可以对类型重复使用

* 都可以定义对象/函数

* 都可以使用索引签名和泛型

```js
type A = {
  a: number
  b: number
}

interface IA {
  a: number
  b: number
}

type B = () => void

interface IB {
  (): void
}
```

#### 区别

* type 能做到的

  * 除了对象和函数，还能能声明为任何其它类型，以及使用运算符生成的联合类型，交叉类型
  * 可以使用映射类型
  * 扩展方式：通过联合类型和交叉类型（冲突产生never）

* interface 能做到的

  * 多次定义合并
  * 扩展方式：通过多次定义（冲突会提示），extends关键字



